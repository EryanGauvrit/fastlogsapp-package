{"version":3,"file":"index.umd.js","sources":["../src/fastLogsRepository.ts","../src/fastLogsService.ts","../src/index.ts"],"sourcesContent":["import { FastLogFilter, FastLogGet, FastLogPost } from \"./fastLogsService\";\r\n\r\nexport type PersonalData = {\r\n    address_ip: string;\r\n    browser: string;\r\n}\r\n\r\nexport class FastLogsRepository {\r\n    // private API_URL = \"http://localhost:8080\";\r\n    private API_URL = \"https://fast-logs-app.onrender.com\";\r\n    private secretKey: string;\r\n    private sourceName: string;\r\n\r\n    constructor(secretKey: string, sourceName: string) {\r\n        this.secretKey = secretKey;\r\n        this.sourceName = sourceName;\r\n    }\r\n\r\n    async getFastLogs(filters?: FastLogFilter): Promise<FastLogGet> {\r\n        const queryParams = new URLSearchParams(filters).toString();\r\n        \r\n        const res = await fetch(`${this.API_URL}/log${queryParams && `?${queryParams}`}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            }\r\n        });\r\n        \r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to fetch fast logs\");\r\n        }\r\n\r\n        return res.json();\r\n    }\r\n\r\n    async postFastLog(fastLog: FastLogPost): Promise<void> {\r\n        const personalData = await this.getUserPersonalData();\r\n        fastLog.sourceName = this.sourceName;\r\n        fastLog.ip_address = personalData.address_ip;\r\n        fastLog.navigator = personalData.browser;\r\n        const res = await fetch(`${this.API_URL}/log`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            },\r\n            body: JSON.stringify(fastLog)\r\n        });\r\n\r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to post fast log\");\r\n        }\r\n    }\r\n\r\n    async deleteFastLog(id: number): Promise<void> {\r\n        const res = await fetch(`${this.API_URL}/log/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            }\r\n        });\r\n\r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to delete fast log\");\r\n        }\r\n    }\r\n\r\n    private async getUserPersonalData(): Promise<PersonalData> {\r\n        const res = await fetch(`${this.API_URL}/audit`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            }\r\n        });\r\n\r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to fetch user personal data\");\r\n        }\r\n\r\n        return res.json();\r\n    }\r\n}","import { FastLogsRepository } from \"./fastLogsRepository\";\r\n\r\nexport type Source = {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nexport type Action = {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nexport type FastLog = {\r\n    id: number;\r\n    content: string;\r\n    ip_address: string;\r\n    navigator: string;\r\n    description: string;\r\n    localisation: string;\r\n    author?: string;\r\n    source: Source;\r\n    action: Action;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nexport type FastLogGet = {\r\n    logs: FastLog[];\r\n    count: number;\r\n    totalPages: number;\r\n    hasPrev: boolean;\r\n    hasNext: boolean;\r\n}\r\n\r\nexport type FastLogPost = {\r\n    content: string;\r\n    ip_address?: string;\r\n    navigator?: string;\r\n    description: string;\r\n    localisation?: string;\r\n    sourceName?: string;\r\n    actionName: string;\r\n    author?: string;\r\n}\r\n\r\nexport type FastLogFilter = {\r\n    ip_address?: string;\r\n    navigator?: string;\r\n    localisation?: string;\r\n    sourceName?: string;\r\n    actionName?: string;\r\n    author?: string;\r\n    limit?: string;\r\n    page?: string;\r\n}\r\n\r\nexport class FastLogsService {\r\n    constructor(secretKey: string, sourceName: string) {\r\n        this.fastLogsRepository = new FastLogsRepository(secretKey, sourceName);\r\n    }\r\n\r\n    private fastLogsRepository: FastLogsRepository;\r\n\r\n    async getFastLogs(filters?: FastLogFilter): Promise<FastLogGet> {\r\n        return this.fastLogsRepository.getFastLogs(filters);\r\n    }\r\n\r\n    async postFastLog(fastLog: FastLogPost): Promise<void> {\r\n        return this.fastLogsRepository.postFastLog(fastLog);\r\n    }\r\n\r\n    async deleteFastLog(id: number): Promise<void> {\r\n        return this.fastLogsRepository.deleteFastLog(id);\r\n    }\r\n}","export { Action, FastLog, FastLogFilter, FastLogGet, FastLogPost, FastLogsService, Source } from \"./fastLogsService\";\r\n\r\nexport const testPackage = () => {\r\n    console.log('testPackage utility function called!');\r\n}"],"names":["FastLogsRepository","secretKey","sourceName","this","API_URL","_proto","prototype","getFastLogs","filters","queryParams","URLSearchParams","toString","Promise","resolve","fetch","method","headers","Authorization","_this","then","res","status","Error","json","e","reject","postFastLog","fastLog","_this2","getUserPersonalData","personalData","ip_address","address_ip","navigator","browser","body","JSON","stringify","deleteFastLog","id","_this4","FastLogsService","fastLogsRepository","console","log"],"mappings":"qOAOa,IAAAA,eAMT,WAAA,SAAAA,EAAYC,EAAmBC,GAAkBC,KAJzCC,QAAU,0CACVH,eAAS,EAAAE,KACTD,gBAGJ,EAAAC,KAAKF,UAAYA,EACjBE,KAAKD,WAAaA,CACtB,CAAC,IAAAG,EAAAL,EAAAM,UAmEA,OAnEAD,EAEKE,YAAWA,SAACC,GAAuB,IAAA,IAC/BC,EAAc,IAAIC,gBAAgBF,GAASG,WAAW,OAAAC,QAAAC,QAE1CC,MAASX,KAAKC,QAAO,QAAOK,GAAmBA,IAAAA,GAAiB,CAC9EM,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBC,cAA2BC,UAJRf,KAIaF,cAEtCkB,cANIC,GAQN,GAAmB,MAAfA,EAAIC,OACJ,MAAM,IAAIC,MAAM,6BAGpB,OAAOF,EAAIG,MAAO,EACtB,CAAC,MAAAC,GAAAZ,OAAAA,QAAAa,OAAAD,EAAA,CAAA,EAAAnB,EAEKqB,YAAWA,SAACC,GAAoB,IAAA,IAAAC,EACPzB,KAAIS,OAAAA,QAAAC,QAAJe,EAAKC,uBAAqBV,KAAA,SAA/CW,GAGmC,OAFzCH,EAAQzB,WAAa0B,EAAK1B,WAC1ByB,EAAQI,WAAaD,EAAaE,WAClCL,EAAQM,UAAYH,EAAaI,QAAQtB,QAAAC,QACvBC,MAASc,EAAKxB,eAAe,CAC3CW,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBC,cAA2BW,UAAAA,EAAK3B,WAEpCkC,KAAMC,KAAKC,UAAUV,MACvBR,cAPIC,GAAG,GASU,MAAfA,EAAIC,OACJ,MAAM,IAAIC,MAAM,8BAExB,CAAC,MAAAE,GAAAZ,OAAAA,QAAAa,OAAAD,KAAAnB,EAEKiC,cAAaA,SAACC,GAAU,IACK,OAAA3B,QAAAC,QAAbC,MAASX,KAAKC,QAAemC,QAAAA,EAAM,CACjDxB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAJId,KAIaF,cAEtCkB,KAAA,SANIC,GAAG,GAQU,MAAfA,EAAIC,OACJ,MAAM,IAAIC,MAAM,4BAExB,EAAA,CAAC,MAAAE,GAAA,OAAAZ,QAAAa,OAAAD,EAAA,CAAA,EAAAnB,EAEawB,oBAAmB,WAAA,WACEjB,QAAAC,QAAbC,MAASX,KAAKC,iBAAiB,CAC7CW,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBC,cAA2BuB,UAJRrC,KAIaF,cAEtCkB,cANIC,GAQN,GAAmB,MAAfA,EAAIC,OACJ,MAAM,IAAIC,MAAM,sCAGpB,OAAOF,EAAIG,MAAO,EACtB,CAAC,MAAAC,GAAAZ,OAAAA,QAAAa,OAAAD,EAAA,CAAA,EAAAxB,CAAA,CAtED,kCC4CA,WAAA,SAAAyC,EAAYxC,EAAmBC,GAIvBwC,KAAAA,wBAHJ,EAAAvC,KAAKuC,mBAAqB,IAAI1C,EAAmBC,EAAWC,EAChE,CAAC,IAAAG,EAAAoC,EAAAnC,iBAAAD,EAIKE,YAAW,SAACC,GAAuB,IACrC,OAAAI,QAAAC,QAAOV,KAAKuC,mBAAmBnC,YAAYC,GAC/C,CAAC,MAAAgB,GAAA,OAAAZ,QAAAa,OAAAD,EAAAnB,CAAAA,EAAAA,EAEKqB,YAAWA,SAACC,GAAoB,IAClC,OAAAf,QAAAC,QAAOV,KAAKuC,mBAAmBhB,YAAYC,GAC/C,CAAC,MAAAH,GAAAZ,OAAAA,QAAAa,OAAAD,EAAA,CAAA,EAAAnB,EAEKiC,cAAa,SAACC,OAChB,OAAA3B,QAAAC,QAAOV,KAAKuC,mBAAmBJ,cAAcC,GACjD,CAAC,MAAAf,GAAA,OAAAZ,QAAAa,OAAAD,KAAAiB,CAAA,CAhBD,iBCvDuB,WACvBE,QAAQC,IAAI,uCAChB"}