{"version":3,"file":"index.modern.js","sources":["../src/fastLogsRepository.ts","../src/fastLogsService.ts","../src/index.ts"],"sourcesContent":["import { FastLogFilter, FastLogGet, FastLogPost } from \"./fastLogsService\";\r\n\r\nexport type PersonalData = {\r\n    address_ip: string;\r\n    browser: string;\r\n}\r\n\r\nexport class FastLogsRepository {\r\n    // private API_URL = \"http://localhost:8080\";\r\n    private API_URL = \"https://fast-logs-app.onrender.com\";\r\n    private secretKey: string;\r\n    private sourceName: string;\r\n\r\n    constructor(secretKey: string, sourceName: string) {\r\n        this.secretKey = secretKey;\r\n        this.sourceName = sourceName;\r\n    }\r\n\r\n    async getFastLogs(filters?: FastLogFilter): Promise<FastLogGet> {\r\n        const queryParams = new URLSearchParams(filters).toString();\r\n        \r\n        const res = await fetch(`${this.API_URL}/log${queryParams && `?${queryParams}`}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            }\r\n        });\r\n        \r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to fetch fast logs\");\r\n        }\r\n\r\n        return res.json();\r\n    }\r\n\r\n    async postFastLog(fastLog: FastLogPost): Promise<void> {\r\n        const personalData = await this.getUserPersonalData();\r\n        fastLog.sourceName = this.sourceName;\r\n        fastLog.ip_address = personalData.address_ip;\r\n        fastLog.navigator = personalData.browser;\r\n        const res = await fetch(`${this.API_URL}/log`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            },\r\n            body: JSON.stringify(fastLog)\r\n        });\r\n\r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to post fast log\");\r\n        }\r\n    }\r\n\r\n    async deleteFastLog(id: number): Promise<void> {\r\n        const res = await fetch(`${this.API_URL}/log/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            }\r\n        });\r\n\r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to delete fast log\");\r\n        }\r\n    }\r\n\r\n    private async getUserPersonalData(): Promise<PersonalData> {\r\n        const res = await fetch(`${this.API_URL}/audit`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${this.secretKey}`\r\n            }\r\n        });\r\n\r\n        if (res.status !== 200) {\r\n            throw new Error(\"Failed to fetch user personal data\");\r\n        }\r\n\r\n        return res.json();\r\n    }\r\n}","import { FastLogsRepository } from \"./fastLogsRepository\";\r\n\r\nexport type Source = {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nexport type Action = {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nexport type FastLog = {\r\n    id: number;\r\n    content: string;\r\n    ip_address: string;\r\n    navigator: string;\r\n    description: string;\r\n    localisation: string;\r\n    author?: string;\r\n    source: Source;\r\n    action: Action;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\nexport type FastLogGet = {\r\n    logs: FastLog[];\r\n    count: number;\r\n    totalPages: number;\r\n    hasPrev: boolean;\r\n    hasNext: boolean;\r\n}\r\n\r\nexport type FastLogPost = {\r\n    content: string;\r\n    ip_address?: string;\r\n    navigator?: string;\r\n    description: string;\r\n    localisation?: string;\r\n    sourceName?: string;\r\n    actionName: string;\r\n    author?: string;\r\n}\r\n\r\nexport type FastLogFilter = {\r\n    ip_address?: string;\r\n    navigator?: string;\r\n    localisation?: string;\r\n    sourceName?: string;\r\n    actionName?: string;\r\n    author?: string;\r\n    limit?: string;\r\n    page?: string;\r\n}\r\n\r\nexport class FastLogsService {\r\n    constructor(secretKey: string, sourceName: string) {\r\n        this.fastLogsRepository = new FastLogsRepository(secretKey, sourceName);\r\n    }\r\n\r\n    private fastLogsRepository: FastLogsRepository;\r\n\r\n    async getFastLogs(filters?: FastLogFilter): Promise<FastLogGet> {\r\n        return this.fastLogsRepository.getFastLogs(filters);\r\n    }\r\n\r\n    async postFastLog(fastLog: FastLogPost): Promise<void> {\r\n        return this.fastLogsRepository.postFastLog(fastLog);\r\n    }\r\n\r\n    async deleteFastLog(id: number): Promise<void> {\r\n        return this.fastLogsRepository.deleteFastLog(id);\r\n    }\r\n}","export { Action, FastLog, FastLogFilter, FastLogGet, FastLogPost, FastLogsService, Source } from \"./fastLogsService\";\r\n\r\nexport const testPackage = () => {\r\n    console.log('testPackage utility function called!');\r\n}"],"names":["FastLogsRepository","constructor","secretKey","sourceName","this","API_URL","getFastLogs","filters","queryParams","URLSearchParams","toString","res","fetch","method","headers","Authorization","status","Error","json","postFastLog","fastLog","personalData","getUserPersonalData","ip_address","address_ip","navigator","browser","body","JSON","stringify","deleteFastLog","id","FastLogsService","fastLogsRepository","testPackage","console","log"],"mappings":"MAOaA,EAMTC,WAAAA,CAAYC,EAAmBC,GAAkBC,KAJzCC,QAAU,0CACVH,eAAS,EAAAE,KACTD,gBAGJ,EAAAC,KAAKF,UAAYA,EACjBE,KAAKD,WAAaA,CACtB,CAEA,iBAAMG,CAAYC,GACd,MAAMC,EAAc,IAAIC,gBAAgBF,GAASG,WAE3CC,QAAYC,SAASR,KAAKC,cAAcG,GAAe,IAAIA,MAAiB,CAC9EK,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBC,cAAiB,UAAUX,KAAKF,eAIxC,GAAmB,MAAfS,EAAIK,OACJ,MAAM,IAAIC,MAAM,6BAGpB,OAAON,EAAIO,MACf,CAEA,iBAAMC,CAAYC,GACd,MAAMC,QAAyBjB,KAACkB,sBAahC,GAZAF,EAAQjB,WAAaC,KAAKD,WAC1BiB,EAAQG,WAAaF,EAAaG,WAClCJ,EAAQK,UAAYJ,EAAaK,QAUd,aATDd,SAASR,KAAKC,cAAe,CAC3CQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBC,cAAiB,UAAUX,KAAKF,aAEpCyB,KAAMC,KAAKC,UAAUT,MAGjBJ,OACJ,MAAM,IAAIC,MAAM,0BAExB,CAEA,mBAAMa,CAAcC,GAShB,GAAmB,aARDnB,MAAM,GAAGR,KAAKC,eAAe0B,IAAM,CACjDlB,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChBC,cAAiB,UAAUX,KAAKF,gBAIhCc,OACJ,MAAU,IAAAC,MAAM,4BAExB,CAEQ,yBAAMK,GACV,MAAMX,QAAYC,SAASR,KAAKC,gBAAiB,CAC7CQ,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBC,cAAiB,UAAUX,KAAKF,eAIxC,GAAmB,MAAfS,EAAIK,OACJ,MAAM,IAAIC,MAAM,sCAGpB,OAAON,EAAIO,MACf,QC3BSc,EACT/B,WAAAA,CAAYC,EAAmBC,GAAkBC,KAIzC6B,wBAHJ,EAAA7B,KAAK6B,mBAAqB,IAAIjC,EAAmBE,EAAWC,EAChE,CAIA,iBAAMG,CAAYC,GACd,OAAOH,KAAK6B,mBAAmB3B,YAAYC,EAC/C,CAEA,iBAAMY,CAAYC,GACd,OAAWhB,KAAC6B,mBAAmBd,YAAYC,EAC/C,CAEA,mBAAMU,CAAcC,GAChB,OAAO3B,KAAK6B,mBAAmBH,cAAcC,EACjD,ECvES,MAAAG,EAAcA,KACvBC,QAAQC,IAAI,uCAChB"}